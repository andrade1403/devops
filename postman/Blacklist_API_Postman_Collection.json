{
  "info": {
    "name": "Blacklist API Documentation",
    "description": "API REST completa para gesti칩n de lista negra de emails con autenticaci칩n JWT",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "12345678-1234-1234-1234-123456789abc"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "游댐 Authentication",
      "item": [
        {
          "name": "Generar Token JWT",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/blacklists/token",
              "host": ["{{base_url}}"],
              "path": ["blacklists", "token"]
            },
            "description": "Genera un token JWT v치lido para autenticar las siguientes peticiones a la API. Este token es requerido para acceder a los endpoints protegidos."
          },
          "response": [
            {
              "name": "Token generado exitosamente",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/blacklists/token",
                  "host": ["{{base_url}}"],
                  "path": ["blacklists", "token"]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTYzMzUxNTY3MSwianRpIjoiYjZmNzA1ZDEtMzRiYS00NzE5LTk0ODQtMzZkMmQ4MzY1NjgwIiwibmJmIjoxNjMzNTE1NjcxLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjoiYmxhY2tsaXN0X3NlcnZpY2UiLCJleHAiOjE2MzM1MTkyNzF9.KrXKpNGlKj4Yj8XKpNGlKj4Yj8XKpNGlKj4Yj8XKpNG\"\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extraer y guardar el token autom치ticamente",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('auth_token', responseJson.token);",
                  "    pm.test('Token obtenido y guardado exitosamente', function () {",
                  "        pm.expect(responseJson.token).to.be.a('string');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ],
      "description": "Endpoints relacionados con la autenticaci칩n y generaci칩n de tokens JWT"
    },
    {
      "name": "游늶 Gesti칩n de Lista Negra",
      "item": [
        {
          "name": "Agregar Email a Lista Negra - Ejemplo B치sico",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"usuario.bloqueado@ejemplo.com\",\n    \"appId\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"reason\": \"Spam reportado m칰ltiples veces\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Agrega un email a la lista negra global. Requiere:\n- **email**: Direcci칩n de correo v치lida\n- **appId**: UUID de la aplicaci칩n cliente\n- **reason**: Motivo del bloqueo (opcional, m치x. 255 caracteres)\n\nEl sistema autom치ticamente captura la IP del solicitante y timestamp."
          },
          "response": [
            {
              "name": "Email agregado exitosamente",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"usuario.bloqueado@ejemplo.com\",\n    \"appId\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"reason\": \"Spam reportado m칰ltiples veces\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/blacklists",
                  "host": ["{{base_url}}"],
                  "path": ["blacklists"]
                }
              },
              "status": "OK",
              "code": 200,
              "body": "{\n    \"msg\": \"Usuario agregado a la lista negra exitosamente\"\n}"
            },
            {
              "name": "Error - Email inv치lido",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{auth_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"email-invalido\",\n    \"appId\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/blacklists",
                  "host": ["{{base_url}}"],
                  "path": ["blacklists"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "body": "{\n    \"msg\": \"El email proporcionado no tiene un formato v치lido\"\n}"
            }
          ]
        },
        {
          "name": "Agregar Email Corporativo - Violaci칩n Pol칤ticas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"empleado.problematico@empresa.com\",\n    \"appId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"reason\": \"Violaci칩n de pol칤ticas corporativas\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Ejemplo de bloqueo de email corporativo por violaci칩n de pol칤ticas internas"
          }
        },
        {
          "name": "Bloquear Marketing Agresivo",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"marketing.agresivo@publicidad.com\",\n    \"appId\": \"789e0123-e45f-67g8-h901-234567890abc\",\n    \"reason\": \"Marketing no solicitado excesivo\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de cuenta que env칤a marketing no solicitado de forma excesiva"
          }
        },
        {
          "name": "Bloquear Cuenta Fraudulenta",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"fraud.account@suspicious.org\",\n    \"appId\": \"abc12345-def6-7890-abcd-ef1234567890\",\n    \"reason\": \"Actividad fraudulenta detectada\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de cuenta con actividad fraudulenta confirmada"
          }
        },
        {
          "name": "Bloquear Bot Automatizado",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"automated.bot@scraper.net\",\n    \"appId\": \"fedcba98-7654-3210-fedc-ba9876543210\",\n    \"reason\": \"Bot automatizado sin autorizaci칩n\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de bot automatizado que opera sin autorizaci칩n"
          }
        },
        {
          "name": "Bloquear Email Temporal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"temp.email@10minutemail.com\",\n    \"appId\": \"11111111-2222-3333-4444-555555555555\",\n    \"reason\": \"Uso de email temporal para evadir restricciones\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de email temporal utilizado para evadir restricciones del sistema"
          }
        },
        {
          "name": "Bloquear Cuenta de Phishing",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"fake.support@phishing-site.com\",\n    \"appId\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    \"reason\": \"Intento de phishing reportado\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de cuenta utilizada para ataques de phishing"
          }
        },
        {
          "name": "Bloquear Usuario Abusivo",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"abusive.user@trolling.com\",\n    \"appId\": \"12345678-9abc-def0-1234-56789abcdef0\",\n    \"reason\": \"Comportamiento abusivo hacia otros usuarios\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Bloqueo de usuario con comportamiento abusivo hacia otros miembros de la comunidad"
          }
        },
        {
          "name": "Ejemplo sin Raz칩n (Campo Opcional)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"sin.razon@ejemplo.com\",\n    \"appId\": \"99999999-8888-7777-6666-555555555555\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Ejemplo donde se omite el campo 'reason' para demostrar que es opcional"
          }
        },
        {
          "name": "Ejemplo - Datos Incompletos (Error)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"usuario@ejemplo.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/blacklists",
              "host": ["{{base_url}}"],
              "path": ["blacklists"]
            },
            "description": "Ejemplo que genera error por falta del campo obligatorio 'appId'"
          },
          "response": [
            {
              "name": "Error - Campos faltantes",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"usuario@ejemplo.com\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/blacklists",
                  "host": ["{{base_url}}"],
                  "path": ["blacklists"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "body": "{\n    \"msg\": \"Hay campos necesarios que no est치n presentes en la solicitud\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints para la gesti칩n de emails en la lista negra global",
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{auth_token}}",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "游낀 Health Check",
      "item": [
        {
          "name": "Verificar Estado del Servicio",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/blacklists/health",
              "host": ["{{base_url}}"],
              "path": ["blacklists", "health"]
            },
            "description": "Endpoint para verificar que el microservicio est치 funcionando correctamente. No requiere autenticaci칩n."
          },
          "response": [
            {
              "name": "Servicio funcionando correctamente",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/blacklists/health",
                  "host": ["{{base_url}}"],
                  "path": ["blacklists", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n    \"status\": \"pong\"\n}"
            }
          ]
        }
      ],
      "description": "Endpoints para monitoreo y verificaci칩n del estado del servicio"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script global que se ejecuta antes de cada request",
          "console.log('Ejecutando request a:', pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script global que se ejecuta despu칠s de cada response",
          "pm.test('Status code is success', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
          "});"
        ]
      }
    }
  ]
}